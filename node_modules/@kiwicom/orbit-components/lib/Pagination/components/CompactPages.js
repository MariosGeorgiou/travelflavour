"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _Pages = _interopRequireDefault(require("./Pages"));

var _PageButtonLink = _interopRequireDefault(require("./PageButtonLink"));

var _MenuMeatballs = _interopRequireDefault(require("../../icons/MenuMeatballs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var MeatBalls = function MeatBalls() {
  return React.createElement(_MenuMeatballs.default, {
    size: "small",
    color: "attention"
  });
};

var CompactPages = function CompactPages(_ref) {
  var pageCount = _ref.pageCount,
      selectedPage = _ref.selectedPage,
      onPageChange = _ref.onPageChange,
      size = _ref.size;

  if (selectedPage > pageCount - 4) {
    return React.createElement(React.Fragment, null, React.createElement(_PageButtonLink.default, {
      onPageChange: onPageChange,
      size: size
    }, 1), React.createElement(MeatBalls, null), React.createElement(_Pages.default, {
      pageCount: 5,
      selectedPage: selectedPage,
      onPageChange: onPageChange,
      enlargement: pageCount - 4,
      size: size
    }));
  }

  if (selectedPage < 5) {
    return React.createElement(React.Fragment, null, React.createElement(_Pages.default, {
      pageCount: 5,
      selectedPage: selectedPage,
      onPageChange: onPageChange,
      size: size
    }), React.createElement(MeatBalls, null), React.createElement(_PageButtonLink.default, {
      onPageChange: onPageChange,
      size: size
    }, pageCount));
  }

  return React.createElement(React.Fragment, null, React.createElement(_PageButtonLink.default, {
    onPageChange: onPageChange,
    size: size
  }, 1), React.createElement(MeatBalls, null), React.createElement(_Pages.default, {
    pageCount: 3,
    selectedPage: selectedPage,
    onPageChange: onPageChange,
    enlargement: selectedPage - 1,
    size: size
  }), React.createElement(MeatBalls, null), React.createElement(_PageButtonLink.default, {
    onPageChange: onPageChange,
    size: size
  }, pageCount));
};

var _default = CompactPages;
exports.default = _default;