"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StyledIconRight = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../defaultTheme"));

var _Heading = _interopRequireDefault(require("../../Heading"));

var _Stack = _interopRequireDefault(require("../../Stack"));

var _NewWindow = _interopRequireDefault(require("../../icons/NewWindow"));

var _ChevronRight = _interopRequireDefault(require("../../icons/ChevronRight"));

var _ChevronDown = _interopRequireDefault(require("../../icons/ChevronDown"));

var _rtl = require("../../utils/rtl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var StyledTileHeader = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileHeader",
  componentId: "sc-1k1u3lr-0"
})(["display:block;cursor:pointer;position:relative;padding:", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.spaceMedium;
});

StyledTileHeader.defaultProps = {
  theme: _defaultTheme.default
};

var StyledTileTitle = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileTitle",
  componentId: "sc-1k1u3lr-1"
})(["display:flex;align-items:center;"]);

StyledTileTitle.defaultProps = {
  theme: _defaultTheme.default
};

var StyledTileIcon = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileIcon",
  componentId: "sc-1k1u3lr-2"
})(["color:", ";display:flex;flex-shrink:0;align-items:center;align-self:flex-start;margin:", ";"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.orbit.colorHeading;
}, function (_ref3) {
  var theme = _ref3.theme;
  return (0, _rtl.rtlSpacing)("0 ".concat(theme.orbit.spaceXSmall, " 0 0"));
});

StyledTileIcon.defaultProps = {
  theme: _defaultTheme.default
};

var StyledTileDescription = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledTileDescription",
  componentId: "sc-1k1u3lr-3"
})(["font-family:", ";font-size:", ";color:", ";line-height:", ";width:100%;", ";"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.orbit.fontFamily;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.orbit.fontSizeTextNormal;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.orbit.colorTextPrimary;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.orbit.lineHeightText;
}, function (_ref8) {
  var hasTitle = _ref8.hasTitle,
      theme = _ref8.theme;
  return hasTitle && (0, _styledComponents.css)(["margin-top:", ";"], theme.orbit.spaceXXSmall);
});

StyledTileDescription.defaultProps = {
  theme: _defaultTheme.default
};

var StyledIconRight = _styledComponents.default.div.withConfig({
  displayName: "TileHeader__StyledIconRight",
  componentId: "sc-1k1u3lr-4"
})(["color:", ";padding:", ";transition:color ", " ease-in-out;svg{", ";transition:transform ", " ease-in-out;}"], function (_ref9) {
  var theme = _ref9.theme;
  return theme.orbit.paletteInkLight;
}, function (_ref10) {
  var theme = _ref10.theme;
  return (0, _rtl.rtlSpacing)("0 0 0 ".concat(theme.orbit.spaceMedium));
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.orbit.durationFast;
}, function (_ref12) {
  var isExpanded = _ref12.isExpanded;
  return isExpanded && (0, _styledComponents.css)(["transform:rotate(-180deg);"]);
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.orbit.durationFast;
});

exports.StyledIconRight = StyledIconRight;
StyledIconRight.defaultProps = {
  theme: _defaultTheme.default
};

var getIconRight = function getIconRight(_ref14) {
  var external = _ref14.external,
      isExpandable = _ref14.isExpandable;

  if (isExpandable) {
    return React.createElement(_ChevronDown.default, {
      size: "medium"
    });
  }

  if (external) {
    return React.createElement(_NewWindow.default, {
      size: "medium"
    });
  }

  return React.createElement(_ChevronRight.default, {
    size: "medium",
    reverseOnRtl: true
  });
};

var IconRight = function IconRight(_ref15) {
  var external = _ref15.external,
      isExpandable = _ref15.isExpandable,
      isExpanded = _ref15.isExpanded;
  return React.createElement(StyledIconRight, {
    isExpandable: isExpandable,
    isExpanded: isExpanded
  }, getIconRight({
    external: external,
    isExpandable: isExpandable
  }));
};

var TileHeader = function TileHeader(_ref16) {
  var icon = _ref16.icon,
      title = _ref16.title,
      description = _ref16.description,
      external = _ref16.external,
      onClick = _ref16.onClick,
      isExpandable = _ref16.isExpandable,
      isExpanded = _ref16.isExpanded;
  return React.createElement(StyledTileHeader, {
    onClick: onClick
  }, React.createElement(_Stack.default, {
    align: "center",
    shrink: true,
    spacing: "none"
  }, icon && React.createElement(StyledTileIcon, null, icon), React.createElement(_Stack.default, {
    spacing: "none",
    direction: "column",
    shrink: true
  }, title && React.createElement(StyledTileTitle, null, React.createElement(_Heading.default, {
    type: "title3",
    element: "h3"
  }, title)), description && React.createElement(StyledTileDescription, {
    hasTitle: !!title
  }, description)), React.createElement(IconRight, {
    external: external,
    isExpandable: isExpandable,
    isExpanded: isExpanded
  })));
};

var _default = TileHeader;
exports.default = _default;