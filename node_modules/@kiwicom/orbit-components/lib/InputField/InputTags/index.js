"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _rtl = require("../../utils/rtl");

var _defaultTheme = _interopRequireDefault(require("../../defaultTheme"));

var _Tag = require("../../Tag");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var StyledInputTags = _styledComponents.default.div.withConfig({
  displayName: "InputTags__StyledInputTags",
  componentId: "sc-92v3p1-0"
})(["position:relative;margin:", ";display:flex;align-items:center;flex:0 1 auto;height:100%;z-index:2;min-width:50px;overflow:hidden;"], function (_ref) {
  var theme = _ref.theme;
  return (0, _rtl.rtlSpacing)("0 0 0 ".concat(theme.orbit.spaceSmall));
});

StyledInputTags.defaultProps = {
  theme: _defaultTheme.default
};

var StyledInputTagsInner = _styledComponents.default.div.withConfig({
  displayName: "InputTags__StyledInputTagsInner",
  componentId: "sc-92v3p1-1"
})(["overflow-x:scroll;white-space:nowrap;-ms-overflow-style:none;scrollbar-width:none;&::-webkit-scrollbar{display:none;}", " + ", "{margin:", ";}"], _Tag.StyledTag, _Tag.StyledTag, function (_ref2) {
  var theme = _ref2.theme;
  return (0, _rtl.rtlSpacing)("0 0 0 ".concat(theme.orbit.spaceXSmall));
});

StyledInputTagsInner.defaultProps = {
  theme: _defaultTheme.default
};

var InputTags = function InputTags(_ref3) {
  var children = _ref3.children;

  var tagsRef = _react.default.createRef();

  (0, _react.useEffect)(function () {
    var handleMouseMove = function handleMouseMove(event) {
      if (tagsRef && tagsRef.current) {
        var isDragging = tagsRef.current.isDragging;

        if (isDragging && event.movementX) {
          tagsRef.current.scrollLeft -= event.movementX;
        }
      }
    };

    var handleMouseUp = function handleMouseUp() {
      if (tagsRef && tagsRef.current) {
        tagsRef.current.isDragging = false;
      }
    };

    if (tagsRef && tagsRef.current) {
      tagsRef.current.addEventListener("mousemove", handleMouseMove);
      tagsRef.current.addEventListener("mouseup", handleMouseUp);
    }

    return function () {
      var tagsNode = tagsRef.current;

      if (tagsNode) {
        tagsNode.removeEventListener("mousemove", handleMouseMove);
        tagsNode.removeEventListener("mouseup", handleMouseUp);
      }
    };
  }, [tagsRef]);
  return _react.default.createElement(StyledInputTags, null, _react.default.createElement(StyledInputTagsInner, {
    ref: tagsRef,
    onMouseDown: function onMouseDown() {
      if (tagsRef && tagsRef.current) {
        tagsRef.current.isDragging = true;
      }
    }
  }, children));
};

var _default = InputTags;
exports.default = _default;