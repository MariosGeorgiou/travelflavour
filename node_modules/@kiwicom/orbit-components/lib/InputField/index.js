"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Input = exports.Prefix = exports.InputContainer = exports.FakeInput = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _consts = require("./consts");

var _FormFeedback = _interopRequireDefault(require("../FormFeedback"));

var _FormLabel = _interopRequireDefault(require("../FormLabel"));

var _ServiceLogo = require("../ServiceLogo");

var _rtl = require("../utils/rtl");

var _InputTags = _interopRequireDefault(require("./InputTags"));

var _getSpacingToken = _interopRequireDefault(require("../common/getSpacingToken"));

var _getFieldDataState = _interopRequireDefault(require("../common/getFieldDataState"));

var _index = require("../ButtonLink/index");

var _randomID = _interopRequireDefault(require("../utils/randomID"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var getToken = function getToken(name) {
  return function (_ref) {
    var _TOKENS$heightInput, _TOKENS$fontSizeInput, _TOKENS$iconSize, _tokens;

    var theme = _ref.theme,
        size = _ref.size;
    var tokens = (_tokens = {}, _defineProperty(_tokens, _consts.TOKENS.heightInput, (_TOKENS$heightInput = {}, _defineProperty(_TOKENS$heightInput, _consts.SIZE_OPTIONS.SMALL, theme.orbit.heightInputSmall), _defineProperty(_TOKENS$heightInput, _consts.SIZE_OPTIONS.NORMAL, theme.orbit.heightInputNormal), _TOKENS$heightInput)), _defineProperty(_tokens, _consts.TOKENS.fontSizeInput, (_TOKENS$fontSizeInput = {}, _defineProperty(_TOKENS$fontSizeInput, _consts.SIZE_OPTIONS.SMALL, theme.orbit.fontSizeInputSmall), _defineProperty(_TOKENS$fontSizeInput, _consts.SIZE_OPTIONS.NORMAL, theme.orbit.fontSizeInputNormal), _TOKENS$fontSizeInput)), _defineProperty(_tokens, _consts.TOKENS.iconSize, (_TOKENS$iconSize = {}, _defineProperty(_TOKENS$iconSize, _consts.SIZE_OPTIONS.SMALL, theme.orbit.widthIconSmall), _defineProperty(_TOKENS$iconSize, _consts.SIZE_OPTIONS.NORMAL, theme.orbit.widthIconMedium), _TOKENS$iconSize)), _tokens);
    return tokens[name][size];
  };
};

var getPadding = function getPadding() {
  return function (_ref2) {
    var _tokens2;

    var theme = _ref2.theme,
        size = _ref2.size;
    var tokens = (_tokens2 = {}, _defineProperty(_tokens2, _consts.SIZE_OPTIONS.SMALL, theme.orbit.paddingInputSmall), _defineProperty(_tokens2, _consts.SIZE_OPTIONS.NORMAL, theme.orbit.paddingInputNormal), _tokens2);
    return (0, _rtl.rtlSpacing)(tokens[size]);
  };
};

var getDOMType = function getDOMType(type) {
  if (type === _consts.TYPE_OPTIONS.PASSPORTID) {
    return _consts.TYPE_OPTIONS.TEXT;
  }

  return type;
};

var Field = (0, _styledComponents.default)(function (_ref3) {
  var Component = _ref3.component,
      className = _ref3.className,
      children = _ref3.children,
      spaceAfter = _ref3.spaceAfter,
      theme = _ref3.theme,
      props = _objectWithoutProperties(_ref3, ["component", "className", "children", "spaceAfter", "theme"]);

  return React.createElement(Component, _extends({
    className: className
  }, props), children);
}).withConfig({
  displayName: "InputField__Field",
  componentId: "sc-4opay-0"
})(["font-family:", ";position:relative;display:block;z-index:2;flex:1 1 100%;width:100%;margin-bottom:", ";"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.orbit.fontFamily;
}, _getSpacingToken.default);
Field.defaultProps = {
  theme: _defaultTheme.default
};
var FakeInput = (0, _styledComponents.default)(function (_ref5) {
  var children = _ref5.children,
      className = _ref5.className;
  return React.createElement("div", {
    className: className
  }, children);
}).withConfig({
  displayName: "InputField__FakeInput",
  componentId: "sc-4opay-1"
})(["width:100%;position:absolute;z-index:1;top:0;left:0;box-sizing:border-box;height:", ";border-radius:", ";box-shadow:inset 0 0 0 ", ";background-color:", ";font-size:", ";transition:all ", " ease-in-out;"], getToken(_consts.TOKENS.heightInput), function (_ref6) {
  var theme = _ref6.theme;
  return theme.orbit.borderRadiusNormal;
}, function (_ref7) {
  var theme = _ref7.theme,
      error = _ref7.error;
  return "".concat(theme.orbit.borderWidthInput, " ").concat(error ? theme.orbit.borderColorInputError : theme.orbit.borderColorInput);
}, function (_ref8) {
  var disabled = _ref8.disabled,
      theme = _ref8.theme;
  return disabled ? theme.orbit.backgroundInputDisabled : theme.orbit.backgroundInput;
}, getToken(_consts.TOKENS.fontSizeInput), function (_ref9) {
  var theme = _ref9.theme;
  return theme.orbit.durationFast;
});
exports.FakeInput = FakeInput;
FakeInput.defaultProps = {
  theme: _defaultTheme.default
};
var InputContainer = (0, _styledComponents.default)(function (_ref10) {
  var children = _ref10.children,
      className = _ref10.className;
  return React.createElement("div", {
    className: className
  }, children);
}).withConfig({
  displayName: "InputField__InputContainer",
  componentId: "sc-4opay-2"
})(["display:flex;position:relative;flex-direction:row;align-items:center;justify-content:space-between;box-sizing:border-box;height:", ";border-radius:", ";color:", ";font-size:", ";cursor:", ";&:hover > ", "{", ";}", ":active{box-shadow:none;}"], getToken(_consts.TOKENS.heightInput), function (_ref11) {
  var theme = _ref11.theme;
  return theme.orbit.borderRadiusNormal;
}, function (_ref12) {
  var disabled = _ref12.disabled,
      theme = _ref12.theme;
  return disabled ? theme.orbit.colorTextInputDisabled : theme.orbit.colorTextInput;
}, getToken(_consts.TOKENS.fontSizeInput), function (_ref13) {
  var disabled = _ref13.disabled;
  return disabled ? "not-allowed" : "text";
}, FakeInput, function (_ref14) {
  var disabled = _ref14.disabled,
      theme = _ref14.theme,
      error = _ref14.error;
  return !disabled && "box-shadow: inset 0 0 0 ".concat(theme.orbit.borderWidthInput, " ").concat(error ? theme.orbit.borderColorInputErrorHover : theme.orbit.borderColorInputHover);
}, _index.StyledButtonLink);
exports.InputContainer = InputContainer;
InputContainer.defaultProps = {
  theme: _defaultTheme.default
};

var StyledInlineLabel = _styledComponents.default.div.withConfig({
  displayName: "InputField__StyledInlineLabel",
  componentId: "sc-4opay-3"
})(["height:100%;display:flex;align-items:center;pointer-events:none;justify-content:center;padding:", ";", "{margin-bottom:0;font-size:", ";line-height:normal;z-index:3;white-space:nowrap;}"], function (_ref15) {
  var theme = _ref15.theme;
  return (0, _rtl.rtlSpacing)("0 0 0 ".concat(theme.orbit.spaceSmall));
}, _FormLabel.default, getToken(_consts.TOKENS.fontSizeInput));

StyledInlineLabel.defaultProps = {
  theme: _defaultTheme.default
};
var Prefix = (0, _styledComponents.default)(function (_ref16) {
  var children = _ref16.children,
      className = _ref16.className;
  return React.createElement("div", {
    className: className
  }, children);
}).withConfig({
  displayName: "InputField__Prefix",
  componentId: "sc-4opay-4"
})(["height:100%;color:", ";display:flex;align-items:center;pointer-events:none;justify-content:center;padding:", ";z-index:3;& > svg{width:", ";height:", ";color:", ";}"], function (_ref17) {
  var theme = _ref17.theme;
  return theme.orbit.colorTextInputPrefix;
}, function (_ref18) {
  var theme = _ref18.theme;
  return (0, _rtl.rtlSpacing)("0 0 0 ".concat(theme.orbit.spaceSmall));
}, getToken(_consts.TOKENS.iconSize), getToken(_consts.TOKENS.iconSize), function (_ref19) {
  var theme = _ref19.theme;
  return theme.orbit.colorIconInput;
});
exports.Prefix = Prefix;
Prefix.defaultProps = {
  theme: _defaultTheme.default
};
var Suffix = (0, _styledComponents.default)(function (_ref20) {
  var children = _ref20.children,
      className = _ref20.className;
  return React.createElement("div", {
    className: className
  }, children);
}).withConfig({
  displayName: "InputField__Suffix",
  componentId: "sc-4opay-5"
})(["height:", ";color:", ";display:flex;flex-shrink:0;align-items:center;justify-content:center;pointer-events:", ";z-index:3;& svg{color:", ";}", "{height:16px;padding:", ";}"], getToken(_consts.TOKENS.heightInput), function (_ref21) {
  var theme = _ref21.theme;
  return theme.orbit.colorTextInputPrefix;
}, function (_ref22) {
  var disabled = _ref22.disabled;
  return disabled && "none";
}, function (_ref23) {
  var theme = _ref23.theme;
  return theme.orbit.colorIconSecondary;
}, _ServiceLogo.StyledServiceLogo, function (_ref24) {
  var theme = _ref24.theme;
  return (0, _rtl.rtlSpacing)("0 ".concat(theme.orbit.spaceSmall, " 0 0"));
});
Suffix.defaultProps = {
  theme: _defaultTheme.default
};
var Input = (0, _styledComponents.default)( // $FlowExpected
React.forwardRef(function (_ref25, ref) {
  var type = _ref25.type,
      size = _ref25.size,
      theme = _ref25.theme,
      error = _ref25.error,
      help = _ref25.help,
      inlineLabel = _ref25.inlineLabel,
      props = _objectWithoutProperties(_ref25, ["type", "size", "theme", "error", "help", "inlineLabel"]);

  return React.createElement("input", _extends({
    type: getDOMType(type)
  }, props, {
    ref: ref
  }));
})).withConfig({
  displayName: "InputField__Input",
  componentId: "sc-4opay-6"
})(["appearance:none;-webkit-text-fill-color:", ";font-family:", ";border:none;padding:", ";font-size:inherit;font-weight:", ";color:inherit;background-color:transparent;cursor:inherit;flex:1 1 20%;width:100%;height:100%;box-sizing:border-box;border-radius:", ";z-index:2;min-width:0;font-variant-numeric:", ";letter-spacing:", ";&::-webkit-inner-spin-button,&::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}&[data-com-onepassword-filled]{background-color:inherit !important;}&:focus{outline:none;& ~ ", "{box-shadow:inset 0 0 0 ", ";}}&::placeholder{color:", ";opacity:1;}&:-ms-input-placeholder{color:", ";}&::-ms-input-placeholder{color:", ";}&::-ms-clear,&::-ms-reveal{display:none;}"], function (_ref26) {
  var disabled = _ref26.disabled;
  return disabled && "inherit";
}, function (_ref27) {
  var theme = _ref27.theme;
  return theme.orbit.fontFamily;
}, getPadding(), function (_ref28) {
  var inlineLabel = _ref28.inlineLabel,
      theme = _ref28.theme;
  return inlineLabel ? theme.orbit.fontWeightMedium : theme.orbit.fontWeightNormal;
}, function (_ref29) {
  var theme = _ref29.theme;
  return theme.orbit.borderRadiusNormal;
}, function (_ref30) {
  var type = _ref30.type;
  return type === _consts.TYPE_OPTIONS.PASSPORTID && "tabular-nums";
}, function (_ref31) {
  var type = _ref31.type;
  return type === _consts.TYPE_OPTIONS.PASSPORTID && "2px";
}, FakeInput, function (_ref32) {
  var theme = _ref32.theme;
  return "".concat(theme.orbit.borderWidthInputFocus, " ").concat(theme.orbit.borderColorInputFocus);
}, function (_ref33) {
  var theme = _ref33.theme;
  return theme.orbit.colorPlaceholderInput;
}, function (_ref34) {
  var theme = _ref34.theme;
  return theme.orbit.colorPlaceholderInput;
}, function (_ref35) {
  var theme = _ref35.theme;
  return theme.orbit.colorPlaceholderInput;
});
exports.Input = Input;
Input.defaultProps = {
  theme: _defaultTheme.default
};

var FormLabel = function FormLabel(_ref36) {
  var label = _ref36.label,
      isFilled = _ref36.isFilled,
      required = _ref36.required;
  return React.createElement(_FormLabel.default, {
    filled: isFilled,
    required: required
  }, label);
}; // $FlowExpected


var InputField = React.forwardRef(function (props, ref) {
  var disabled = props.disabled,
      _props$size = props.size,
      size = _props$size === void 0 ? _consts.SIZE_OPTIONS.NORMAL : _props$size,
      _props$type = props.type,
      type = _props$type === void 0 ? _consts.TYPE_OPTIONS.TEXT : _props$type,
      label = props.label,
      inlineLabel = props.inlineLabel,
      dataTest = props.dataTest,
      required = props.required,
      error = props.error,
      name = props.name,
      prefix = props.prefix,
      onChange = props.onChange,
      onFocus = props.onFocus,
      onBlur = props.onBlur,
      onKeyUp = props.onKeyUp,
      onKeyDown = props.onKeyDown,
      placeholder = props.placeholder,
      minValue = props.minValue,
      maxValue = props.maxValue,
      minLength = props.minLength,
      maxLength = props.maxLength,
      suffix = props.suffix,
      help = props.help,
      value = props.value,
      tags = props.tags,
      tabIndex = props.tabIndex,
      readOnly = props.readOnly,
      autoComplete = props.autoComplete,
      spaceAfter = props.spaceAfter,
      id = props.id,
      inputMode = props.inputMode;
  var forID = id || (label ? React.useMemo(function () {
    return (0, _randomID.default)("inputFieldID");
  }, []) : undefined);
  return React.createElement(Field, {
    component: label ? "label" : "div",
    spaceAfter: spaceAfter,
    htmlFor: label ? forID : undefined
  }, label && !inlineLabel && React.createElement(FormLabel, {
    label: label,
    isFilled: !!value,
    required: required
  }), React.createElement(InputContainer, {
    size: size,
    disabled: disabled,
    error: error
  }, prefix && React.createElement(Prefix, {
    size: size
  }, prefix), label && inlineLabel && React.createElement(StyledInlineLabel, {
    size: size
  }, React.createElement(FormLabel, {
    label: label,
    isFilled: !!value,
    required: required
  })), tags && React.createElement(_InputTags.default, null, tags), React.createElement(Input, {
    "data-test": dataTest,
    "data-state": (0, _getFieldDataState.default)(!!error),
    onChange: onChange,
    onFocus: onFocus,
    onBlur: onBlur,
    onKeyUp: onKeyUp,
    onKeyDown: onKeyDown,
    name: name,
    type: type,
    value: value,
    placeholder: placeholder,
    disabled: disabled,
    min: minValue,
    max: maxValue,
    minLength: minLength,
    maxLength: maxLength,
    size: size,
    error: error,
    ref: ref,
    tabIndex: tabIndex,
    inlineLabel: inlineLabel,
    readOnly: readOnly,
    autoComplete: autoComplete,
    id: forID,
    inputMode: inputMode
  }), suffix && React.createElement(Suffix, {
    size: size
  }, suffix), React.createElement(FakeInput, {
    size: size,
    disabled: disabled,
    error: error
  })), help && !error && React.createElement(_FormFeedback.default, {
    type: "help"
  }, help), error && React.createElement(_FormFeedback.default, {
    type: "error"
  }, error));
});
InputField.displayName = "InputField";
var _default = InputField;
exports.default = _default;