"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PureSlider = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _convertHexToRgba = _interopRequireDefault(require("@kiwicom/orbit-design-tokens/lib/convertHexToRgba"));

var _js = require("@kiwicom/js");

var _Text = _interopRequireDefault(require("../Text"));

var _Heading = _interopRequireDefault(require("../Heading"));

var _Stack = _interopRequireDefault(require("../Stack"));

var _Hide = _interopRequireDefault(require("../Hide"));

var _Handle = _interopRequireDefault(require("./components/Handle"));

var _Bar = _interopRequireDefault(require("./components/Bar"));

var _keyMaps = _interopRequireDefault(require("../common/keyMaps"));

var _consts = _interopRequireDefault(require("./consts"));

var _Histogram = _interopRequireDefault(require("./components/Histogram"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _mediaQuery = _interopRequireDefault(require("../utils/mediaQuery"));

var _boundingClientRect = _interopRequireDefault(require("../utils/boundingClientRect"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var StyledSlider = _styledComponents.default.div.withConfig({
  displayName: "Slider__StyledSlider",
  componentId: "j475w2-0"
})(["position:relative;"]);

StyledSlider.defaultProps = {
  theme: _defaultTheme.default
};

var StyledSliderContent = _styledComponents.default.div.withConfig({
  displayName: "Slider__StyledSliderContent",
  componentId: "j475w2-1"
})(["display:block;width:100%;box-sizing:border-box;padding-bottom:", ";", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.orbit.spaceXSmall;
}, _mediaQuery.default.tablet((0, _styledComponents.css)(["width:calc(100% + 48px);position:absolute;bottom:-16px;left:-24px;right:-24px;opacity:0;visibility:hidden;padding:12px 24px 48px 24px;border-radius:", ";transition:all ", " ease-in-out;background:transparent;", ";"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.orbit.borderRadiusNormal;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.orbit.durationFast;
}, function (_ref4) {
  var focused = _ref4.focused,
      theme = _ref4.theme;
  return focused && (0, _styledComponents.css)(["visibility:visible;opacity:1;background:", ";box-shadow:0 2px 4px 0 ", ",0 4px 12px 0 ", ";"], theme.orbit.paletteWhite, (0, _convertHexToRgba.default)(theme.orbit.paletteInkLight, 24), (0, _convertHexToRgba.default)(theme.orbit.paletteInkLight, 32));
})));

StyledSliderContent.defaultProps = {
  theme: _defaultTheme.default
};

var StyledSliderInput = _styledComponents.default.div.withConfig({
  displayName: "Slider__StyledSliderInput",
  componentId: "j475w2-2"
})(["display:flex;align-items:center;width:100%;height:24px;"]);

var PureSlider =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(PureSlider, _React$PureComponent);

  function PureSlider() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, PureSlider);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PureSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "bar", React.createRef());

    _defineProperty(_assertThisInitialized(_this), "state", {
      value: _this.props.defaultValue || _consts.default.VALUE,
      handleIndex: null,
      focused: false
    });

    _defineProperty(_assertThisInitialized(_this), "pauseEvent", function (event) {
      if (typeof event.stopPropagation === "function") {
        event.stopPropagation();
      }

      if (typeof event.preventDefault === "function" && (typeof event.cancelable !== "boolean" || event.cancelable)) {
        event.preventDefault();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "stopPropagation", function (event) {
      if (typeof event.stopPropagation === "function") event.stopPropagation();
    });

    _defineProperty(_assertThisInitialized(_this), "isNotEqual", function (a, b) {
      if (Array.isArray(a) && Array.isArray(b)) {
        return a.toString() !== b.toString();
      }

      return a !== b;
    });

    _defineProperty(_assertThisInitialized(_this), "calculateValue", function (ratio, addition, deduction) {
      var _this$props = _this.props,
          _this$props$max = _this$props.max,
          max = _this$props$max === void 0 ? _consts.default.MAX : _this$props$max,
          _this$props$min = _this$props.min,
          min = _this$props$min === void 0 ? _consts.default.MIN : _this$props$min;
      return Math.round((max - min + (addition ? 1 : 0)) * ratio + min - (deduction ? 1 : 0));
    });

    _defineProperty(_assertThisInitialized(_this), "calculateValueFromPosition", function (pageX, throughClick) {
      var barRect = (0, _boundingClientRect.default)(_this.bar);

      if (barRect) {
        var _this$props2 = _this.props,
            histogramData = _this$props2.histogramData,
            histogramLoading = _this$props2.histogramLoading,
            rtl = _this$props2.theme.rtl;
        var _this$state = _this.state,
            handleIndex = _this$state.handleIndex,
            value = _this$state.value;
        var mousePosition = (rtl ? barRect.right : pageX) - (rtl ? pageX : barRect.left);
        var positionRatio = mousePosition / barRect.width;
        var hasHistogram = histogramLoading || !!histogramData; // when range slider

        if (Array.isArray(value)) {
          if (value[0] === value[value.length - 1]) {
            if (_this.calculateValue(positionRatio, true, true) >= value[value.length - 1]) {
              return _this.calculateValue(positionRatio, true, true);
            }

            return _this.calculateValue(positionRatio, true);
          }

          if (_this.isNotEqual(_this.sortArray(value), value)) {
            if (handleIndex === 0) {
              return _this.calculateValue(positionRatio, true, true);
            }

            return _this.calculateValue(positionRatio, true);
          }

          var closestKey = _this.findClosestKey(_this.calculateValue(positionRatio), _this.sortArray(value)); // when first handle of range slider or when clicked and it should move the first handle


          if (handleIndex === 0 || throughClick && closestKey === 0) {
            return _this.calculateValue(positionRatio, true);
          }
        } // simple slider without histogram


        if (handleIndex === null && !hasHistogram) {
          return _this.calculateValue(positionRatio);
        }

        return _this.calculateValue(positionRatio, true, true);
      }

      return null;
    });

    _defineProperty(_assertThisInitialized(_this), "sortArray", function (arr) {
      if (Array.isArray(arr)) {
        return arr.slice().sort(function (a, b) {
          return a - b;
        });
      }

      return arr;
    });

    _defineProperty(_assertThisInitialized(_this), "findClosestKey", function (goal, value) {
      return Array.isArray(value) ? value.reduce(function (acc, curr, index) {
        return Array.isArray(value) && Math.abs(curr - goal) < Math.abs(value[acc] - goal) ? index : acc;
      }, 0) : null;
    });

    _defineProperty(_assertThisInitialized(_this), "moveValueByStep", function (step, forcedValue) {
      var _this$state2 = _this.state,
          value = _this$state2.value,
          handleIndex = _this$state2.handleIndex;

      if (Array.isArray(value)) {
        return _this.replaceValue(forcedValue || _this.alignValue(value[Number(handleIndex)] + step), Number(handleIndex));
      }

      return forcedValue || _this.alignValue(value + step);
    });

    _defineProperty(_assertThisInitialized(_this), "handleKeyDown", function (event) {
      if (event.ctrlKey || event.shiftKey || event.altKey) return;
      var _this$props3 = _this.props,
          _this$props3$step = _this$props3.step,
          step = _this$props3$step === void 0 ? _consts.default.STEP : _this$props3$step,
          _this$props3$min = _this$props3.min,
          min = _this$props3$min === void 0 ? _consts.default.MIN : _this$props3$min,
          _this$props3$max = _this$props3.max,
          max = _this$props3$max === void 0 ? _consts.default.MAX : _this$props3$max,
          rtl = _this$props3.theme.rtl;

      if (event.keyCode === _keyMaps.default.ARROW_UP) {
        _this.pauseEvent(event);

        _this.injectCallbackAndSetState(_this.props.onChange, _this.moveValueByStep(step));
      }

      if (event.keyCode === _keyMaps.default.ARROW_DOWN) {
        _this.pauseEvent(event);

        _this.injectCallbackAndSetState(_this.props.onChange, _this.moveValueByStep(-step));
      }

      if (event.keyCode === _keyMaps.default.ARROW_RIGHT) {
        var switchStep = rtl ? -step : step;

        _this.pauseEvent(event);

        _this.injectCallbackAndSetState(_this.props.onChange, _this.moveValueByStep(switchStep));
      }

      if (event.keyCode === _keyMaps.default.ARROW_LEFT) {
        var _switchStep = rtl ? step : -step;

        _this.pauseEvent(event);

        _this.injectCallbackAndSetState(_this.props.onChange, _this.moveValueByStep(_switchStep));
      }

      if (event.keyCode === _keyMaps.default.HOME) {
        _this.pauseEvent(event);

        _this.injectCallbackAndSetState(_this.props.onChange, _this.moveValueByStep(0, min));
      }

      if (event.keyCode === _keyMaps.default.END) {
        _this.pauseEvent(event);

        _this.injectCallbackAndSetState(_this.props.onChange, _this.moveValueByStep(0, max));
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleBlur", function () {
      _this.setState({
        focused: false
      });

      var value = _this.state.value;
      window.removeEventListener("keydown", _this.handleKeyDown);
      window.removeEventListener("focusout", _this.handleBlur);

      _this.injectCallbackAndSetState(_this.props.onChangeAfter, value, true);
    });

    _defineProperty(_assertThisInitialized(_this), "handleOnFocus", function (i) {
      return function (event) {
        if (typeof i === "number") _this.setState({
          handleIndex: i
        });
        var value = _this.state.value;

        _this.setState({
          focused: true
        });

        _this.pauseEvent(event);

        window.addEventListener("keydown", _this.handleKeyDown);
        window.addEventListener("focusout", _this.handleBlur);

        _this.injectCallbackAndSetState(_this.props.onChangeBefore, value, true);
      };
    });

    _defineProperty(_assertThisInitialized(_this), "handleMove", function (newValue) {
      var _this$state3 = _this.state,
          value = _this$state3.value,
          handleIndex = _this$state3.handleIndex;

      if (newValue != null) {
        if (Array.isArray(value)) {
          return _this.replaceValue(_this.alignValue(newValue), Number(handleIndex));
        }

        return _this.alignValue(newValue);
      }

      return null;
    });

    _defineProperty(_assertThisInitialized(_this), "handleBarMouseDown", function (event) {
      var value = _this.state.value;

      _this.setState({
        handleIndex: null
      });

      var newValue = _this.calculateValueFromPosition(event.pageX, true);

      if (newValue) {
        if (Array.isArray(value)) {
          var index = _this.findClosestKey(newValue, value);

          _this.injectCallbackAndSetState(_this.props.onChange, _this.replaceValue(_this.alignValue(newValue), index));
        } else {
          _this.injectCallbackAndSetState(_this.props.onChange, _this.alignValue(newValue));
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "injectCallbackAndSetState", function (callback, newValue) {
      var forced = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var value = _this.state.value;

      if (newValue != null) {
        if (_this.isNotEqual(newValue, value) || forced) {
          _this.setState({
            value: newValue
          });

          if (callback) {
            callback(_this.sortArray(newValue));
          }
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleMouseMove", function (event) {
      var newValue = _this.calculateValueFromPosition(event.pageX);

      _this.pauseEvent(event);

      _this.injectCallbackAndSetState(_this.props.onChange, _this.handleMove(newValue));
    });

    _defineProperty(_assertThisInitialized(_this), "handleMouseUp", function () {
      var value = _this.state.value;

      _this.setState({
        focused: false
      });

      window.removeEventListener("mousemove", _this.handleMouseMove);
      window.removeEventListener("mouseup", _this.handleMouseUp);

      _this.injectCallbackAndSetState(_this.props.onChangeAfter, value, true);
    });

    _defineProperty(_assertThisInitialized(_this), "handleMouseDown", function (i) {
      return function (event) {
        // just allow left-click
        if (event.button === 0 && event.buttons !== 2) {
          var value = _this.state.value;

          _this.setState({
            focused: true
          });

          if (typeof i === "number") _this.setState({
            handleIndex: i
          });
          window.addEventListener("mousemove", _this.handleMouseMove);
          window.addEventListener("mouseup", _this.handleMouseUp);

          _this.pauseEvent(event);

          _this.injectCallbackAndSetState(_this.props.onChangeBefore, value, true);
        }
      };
    });

    _defineProperty(_assertThisInitialized(_this), "handleOnTouchMove", function (event) {
      if (event.touches.length > 1) return;

      var newValue = _this.calculateValueFromPosition(event.touches[0].pageX);

      _this.pauseEvent(event);

      _this.injectCallbackAndSetState(_this.props.onChange, _this.handleMove(newValue));
    });

    _defineProperty(_assertThisInitialized(_this), "handleTouchEnd", function () {
      var value = _this.state.value;

      _this.setState({
        focused: false
      });

      window.removeEventListener("touchmove", _this.handleOnTouchMove);
      window.removeEventListener("touchend", _this.handleTouchEnd);

      _this.injectCallbackAndSetState(_this.props.onChangeAfter, value, true);
    });

    _defineProperty(_assertThisInitialized(_this), "handleOnTouchStart", function (i) {
      return function (event) {
        if (event.touches.length <= 1) {
          _this.setState({
            focused: true
          });

          var value = _this.state.value;
          if (typeof i === "number") _this.setState({
            handleIndex: i
          });
          window.addEventListener("touchmove", _this.handleOnTouchMove, {
            passive: false
          });
          window.addEventListener("touchend", _this.handleTouchEnd);

          _this.stopPropagation(event);

          _this.injectCallbackAndSetState(_this.props.onChangeBefore, value, true);
        }
      };
    });

    _defineProperty(_assertThisInitialized(_this), "alignValueToStep", function (value) {
      var _this$props$step = _this.props.step,
          step = _this$props$step === void 0 ? _consts.default.STEP : _this$props$step;
      if (step === 1) return value;
      var gap = value % step;
      if (gap === 0) return value;

      if (gap * 2 >= step) {
        return value - gap + step;
      }

      return value - gap;
    });

    _defineProperty(_assertThisInitialized(_this), "alignValueToMaxMin", function (value) {
      var _this$props4 = _this.props,
          _this$props4$max = _this$props4.max,
          max = _this$props4$max === void 0 ? _consts.default.MAX : _this$props4$max,
          _this$props4$min = _this$props4.min,
          min = _this$props4$min === void 0 ? _consts.default.MIN : _this$props4$min;

      if (value > max) {
        return max;
      }

      if (value < min) {
        return min;
      }

      return value;
    });

    _defineProperty(_assertThisInitialized(_this), "alignValue", function (value) {
      return _this.alignValueToMaxMin(_this.alignValueToStep(value));
    });

    _defineProperty(_assertThisInitialized(_this), "replaceValue", function (newValue, index) {
      var value = _this.state.value;
      if (index == null || !Array.isArray(value)) return newValue;
      return value.map(function (item, key) {
        return key === index ? newValue : item;
      });
    });

    _defineProperty(_assertThisInitialized(_this), "renderHandle", function (valueNow, i) {
      var _this$props5 = _this.props,
          _this$props5$min = _this$props5.min,
          min = _this$props5$min === void 0 ? _consts.default.MIN : _this$props5$min,
          _this$props5$max = _this$props5.max,
          max = _this$props5$max === void 0 ? _consts.default.MAX : _this$props5$max,
          histogramData = _this$props5.histogramData,
          histogramLoading = _this$props5.histogramLoading,
          ariaValueText = _this$props5.ariaValueText,
          ariaLabel = _this$props5.ariaLabel;
      var _this$state4 = _this.state,
          handleIndex = _this$state4.handleIndex,
          value = _this$state4.value;
      var key = i && encodeURIComponent(i.toString());
      return React.createElement(_Handle.default, {
        tabIndex: "0",
        onTop: handleIndex === i,
        valueMax: max,
        valueMin: min,
        onMouseDown: _this.handleMouseDown(i),
        onFocus: _this.handleOnFocus(i),
        onTouchStart: _this.handleOnTouchStart(i),
        value: value,
        ariaValueText: ariaValueText,
        ariaLabel: ariaLabel,
        hasHistogram: histogramLoading || !!histogramData,
        index: i || 0,
        key: key
      });
    });

    _defineProperty(_assertThisInitialized(_this), "renderHandles", function () {
      var value = _this.state.value;
      return Array.isArray(value) ? value.map(function (valueNow, i) {
        return _this.renderHandle(valueNow, i);
      }) : _this.renderHandle(value);
    });

    _defineProperty(_assertThisInitialized(_this), "renderSliderTexts", function (biggerSpace) {
      var _this$props6 = _this.props,
          label = _this$props6.label,
          valueDescription = _this$props6.valueDescription,
          histogramDescription = _this$props6.histogramDescription;
      if (!(label || valueDescription || histogramDescription)) return null;
      return React.createElement(_Stack.default, {
        direction: "row",
        spacing: "none",
        spaceAfter: biggerSpace ? "medium" : "small"
      }, (label || histogramDescription) && React.createElement(_Stack.default, {
        direction: "column",
        spacing: "none",
        basis: "60%",
        grow: true
      }, label && React.createElement(_Heading.default, {
        type: "title4",
        element: "div"
      }, label), valueDescription && React.createElement(_Text.default, {
        type: "secondary",
        size: "small"
      }, valueDescription)), histogramDescription && React.createElement(_Stack.default, {
        shrink: true,
        justify: "end",
        grow: false
      }, React.createElement(_Text.default, {
        type: "primary",
        size: "small"
      }, histogramDescription)));
    });

    _defineProperty(_assertThisInitialized(_this), "renderHeading", function (hasHistogram) {
      if (hasHistogram) {
        return React.createElement(_Hide.default, {
          on: ["smallMobile", "mediumMobile", "largeMobile"],
          block: true
        }, _this.renderSliderTexts(true));
      }

      return _this.renderSliderTexts(true);
    });

    return _this;
  }

  _createClass(PureSlider, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props$defaultVa = this.props.defaultValue,
          defaultValue = _this$props$defaultVa === void 0 ? _consts.default.VALUE : _this$props$defaultVa;
      var _prevProps$defaultVal = prevProps.defaultValue,
          prevDefaultValue = _prevProps$defaultVal === void 0 ? _consts.default.VALUE : _prevProps$defaultVal;

      if (this.isNotEqual(prevDefaultValue, defaultValue)) {
        var newValue = Array.isArray(defaultValue) ? defaultValue.map(function (item) {
          return Number(item);
        }) : Number(defaultValue); // eslint-disable-next-line react/no-did-update-set-state

        this.setState({
          value: newValue
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props7 = this.props,
          _this$props7$min = _this$props7.min,
          min = _this$props7$min === void 0 ? _consts.default.MIN : _this$props7$min,
          _this$props7$max = _this$props7.max,
          max = _this$props7$max === void 0 ? _consts.default.MAX : _this$props7$max,
          histogramData = _this$props7.histogramData,
          _this$props7$histogra = _this$props7.histogramLoading,
          histogramLoading = _this$props7$histogra === void 0 ? false : _this$props7$histogra,
          histogramLoadingText = _this$props7.histogramLoadingText,
          dataTest = _this$props7.dataTest,
          _this$props7$step = _this$props7.step,
          step = _this$props7$step === void 0 ? _consts.default.STEP : _this$props7$step;

      if (histogramData) {
        var properHistogramLength = (max - min + step) / step;
        (0, _js.warning)(histogramData.length === properHistogramLength, "Warning: Length of histogramData array is ".concat(histogramData.length, ", but should be ").concat(properHistogramLength, ". This will cause broken visuals of the whole Histogram."));
      }

      var _this$state5 = this.state,
          value = _this$state5.value,
          focused = _this$state5.focused;
      var sortedValue = this.sortArray(value);
      var hasHistogram = histogramLoading || !!histogramData;
      return React.createElement(StyledSlider, {
        "data-test": dataTest
      }, this.renderHeading(hasHistogram), hasHistogram && React.createElement(StyledSliderContent, {
        focused: focused
      }, this.renderSliderTexts(false), React.createElement(_Histogram.default, {
        data: histogramData,
        value: sortedValue,
        min: min,
        step: step,
        loading: histogramLoading,
        loadingText: histogramLoadingText
      })), React.createElement(StyledSliderInput, null, React.createElement(_Bar.default, {
        ref: this.bar,
        onMouseDown: this.handleBarMouseDown,
        value: sortedValue,
        max: max,
        min: min,
        hasHistogram: hasHistogram
      }), this.renderHandles()));
    }
  }]);

  return PureSlider;
}(React.PureComponent);

exports.PureSlider = PureSlider;

_defineProperty(PureSlider, "defaultProps", {
  theme: _defaultTheme.default
});

var ThemedSlider = (0, _styledComponents.withTheme)(PureSlider);
ThemedSlider.displayName = "Slider";
var _default = ThemedSlider;
exports.default = _default;