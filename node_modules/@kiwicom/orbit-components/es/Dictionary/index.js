function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import { pureTranslate } from "../Translate";
export const DictionaryContext = React.createContext({});

const Dictionary = ({
  values,
  children
}) => React.createElement(DictionaryContext.Provider, {
  value: values
}, children);

export function withDictionary(Component) {
  return function DictionaryComponent(props) {
    return React.createElement(DictionaryContext.Consumer, null, dictionary => React.createElement(Component, _extends({}, props, {
      translate: (tKey, values) => pureTranslate(dictionary, tKey, values)
    })));
  };
}
export default Dictionary;